{
  "version": 3,
  "sources": ["../../../src/testing/options.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2023 Project CHIP Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport type TestOptions = {\n    spec?: string | string[];\n    profile?: boolean;\n    grep?: string;\n    fgrep?: string;\n    invert?: boolean;\n    allLogs?: boolean;\n};\n\nfunction option<T extends keyof TestOptions>(options: TestOptions, name: T) {\n    if (options[name] !== undefined && options[name] !== null) {\n        return options[name];\n    }\n\n    // Support both node and browser\n    if (typeof process === \"undefined\") {\n        return;\n    }\n\n    return process.env?.[\n        \"MATTER_\" +\n            name\n                .match(/(.[^A-Z]+)/g)\n                ?.map(s => s.toUpperCase())\n                .join(\"_\")\n    ];\n}\n\nexport namespace TestOptions {\n    export function apply(mocha: Mocha, options: TestOptions) {\n        const grep = option(options, \"grep\");\n        if (grep) {\n            mocha.grep(grep);\n        }\n        const fgrep = option(options, \"fgrep\");\n        if (fgrep) {\n            mocha.fgrep(fgrep);\n        }\n        const invert = option(options, \"invert\");\n        if (invert) {\n            mocha.invert();\n        }\n        const allLogs = option(options, \"allLogs\");\n        if (allLogs) {\n            if (typeof MockLogger !== \"undefined\") {\n                MockLogger.emitAll = true;\n            }\n        }\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA,SAAS,OAAoC,SAAsB,MAAS;AACxE,MAAI,QAAQ,IAAI,MAAM,UAAa,QAAQ,IAAI,MAAM,MAAM;AACvD,WAAO,QAAQ,IAAI;AAAA,EACvB;AAGA,MAAI,OAAO,YAAY,aAAa;AAChC;AAAA,EACJ;AAEA,SAAO,QAAQ,MACX,YACI,KACK,MAAM,aAAa,GAClB,IAAI,OAAK,EAAE,YAAY,CAAC,EACzB,KAAK,GAAG,CACrB;AACJ;AAEO,IAAU;AAAA,CAAV,CAAUA,iBAAV;AACI,WAAS,MAAM,OAAc,SAAsB;AACtD,UAAM,OAAO,OAAO,SAAS,MAAM;AACnC,QAAI,MAAM;AACN,YAAM,KAAK,IAAI;AAAA,IACnB;AACA,UAAM,QAAQ,OAAO,SAAS,OAAO;AACrC,QAAI,OAAO;AACP,YAAM,MAAM,KAAK;AAAA,IACrB;AACA,UAAM,SAAS,OAAO,SAAS,QAAQ;AACvC,QAAI,QAAQ;AACR,YAAM,OAAO;AAAA,IACjB;AACA,UAAM,UAAU,OAAO,SAAS,SAAS;AACzC,QAAI,SAAS;AACT,UAAI,OAAO,eAAe,aAAa;AACnC,mBAAW,UAAU;AAAA,MACzB;AAAA,IACJ;AAAA,EACJ;AAnBO,EAAAA,aAAS;AAAA,GADH;",
  "names": ["TestOptions"]
}
