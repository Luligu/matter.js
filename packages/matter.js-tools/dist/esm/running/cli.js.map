{
  "version": 3,
  "sources": ["../../../src/running/cli.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2023 Project CHIP Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { dirname, resolve } from \"path\";\nimport { exit } from \"process\";\nimport { Project } from \"../building/project.js\";\nimport { executeNode } from \"./execute.js\";\n\n/**\n * Build and execute a matter.js script.\n */\nexport async function main(argv = process.argv) {\n    let script = argv[2];\n    argv = argv.slice(3);\n\n    if (script === undefined || script === \"\") {\n        console.log(\"Error: Script name required\");\n        exit(1);\n    }\n\n    script = resolve(script);\n    let dir;\n\n    if (script.match(/[\\\\/]node_modules[\\\\/].bin[\\\\/]/)) {\n        // When executing a script linked under node_modules, search for the\n        // project from cwd.  This occurs when running tooling such as\n        // \"matter-test\"\n        dir = process.cwd();\n    } else {\n        // When executing outside of node modules we want to build the project\n        // containing the script\n        dir = dirname(script);\n    }\n\n    const project = new Project(dir);\n\n    let format: \"esm\" | \"cjs\";\n    if (project.pkg.esm) {\n        format = \"esm\";\n    } else if (project.pkg.cjs) {\n        format = \"cjs\";\n    } else {\n        console.error(\"Error: Could not identify project format\");\n        exit(2);\n    }\n\n    await project.buildSource(format);\n\n    script = project.pkg.resolve(\n        project.pkg\n            .relative(script)\n            .replace(/\\.ts$/, \".js\")\n            .replace(/^src[\\\\/]/, `dist/${format}/`),\n    );\n\n    await executeNode(script, argv);\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,SAAS,SAAS,eAAe;AACjC,SAAS,YAAY;AACrB,SAAS,eAAe;AACxB,SAAS,mBAAmB;AAK5B,eAAsB,KAAK,OAAO,QAAQ,MAAM;AAC5C,MAAI,SAAS,KAAK,CAAC;AACnB,SAAO,KAAK,MAAM,CAAC;AAEnB,MAAI,WAAW,UAAa,WAAW,IAAI;AACvC,YAAQ,IAAI,6BAA6B;AACzC,SAAK,CAAC;AAAA,EACV;AAEA,WAAS,QAAQ,MAAM;AACvB,MAAI;AAEJ,MAAI,OAAO,MAAM,iCAAiC,GAAG;AAIjD,UAAM,QAAQ,IAAI;AAAA,EACtB,OAAO;AAGH,UAAM,QAAQ,MAAM;AAAA,EACxB;AAEA,QAAM,UAAU,IAAI,QAAQ,GAAG;AAE/B,MAAI;AACJ,MAAI,QAAQ,IAAI,KAAK;AACjB,aAAS;AAAA,EACb,WAAW,QAAQ,IAAI,KAAK;AACxB,aAAS;AAAA,EACb,OAAO;AACH,YAAQ,MAAM,0CAA0C;AACxD,SAAK,CAAC;AAAA,EACV;AAEA,QAAM,QAAQ,YAAY,MAAM;AAEhC,WAAS,QAAQ,IAAI;AAAA,IACjB,QAAQ,IACH,SAAS,MAAM,EACf,QAAQ,SAAS,KAAK,EACtB,QAAQ,aAAa,QAAQ,MAAM,GAAG;AAAA,EAC/C;AAEA,QAAM,YAAY,QAAQ,IAAI;AAClC;",
  "names": []
}
